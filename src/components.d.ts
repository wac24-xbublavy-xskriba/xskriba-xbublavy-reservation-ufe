/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { Ambulance, Patient, Reservation } from "./api/reservation";
export { Ambulance, Patient, Reservation } from "./api/reservation";
export namespace Components {
    interface XskribaXbublavyAmbulanceCreate {
        "apiBase": string;
        "userId": string;
    }
    interface XskribaXbublavyCheck2CircleIcon {
    }
    interface XskribaXbublavyChevronLeftIcon {
    }
    interface XskribaXbublavyExclamationOctagonIcon {
    }
    interface XskribaXbublavyExclamationTriangleIcon {
    }
    interface XskribaXbublavyHospitalFillIcon {
    }
    interface XskribaXbublavyHouseFillIcon {
    }
    interface XskribaXbublavyInfoCircleIcon {
    }
    interface XskribaXbublavyMainMenu {
        "ambulances": Ambulance[];
        "patients": Patient[];
    }
    interface XskribaXbublavyPatientCreate {
        "apiBase": string;
        "userId": string;
    }
    interface XskribaXbublavyPersonPlusFillIcon {
    }
    interface XskribaXbublavyPersonVcardFillIcon {
    }
    interface XskribaXbublavyReservationApp {
        "apiBase": string;
        "baseUrl": string;
    }
    interface XskribaXbublavyReservationCreate {
        "apiBase": string;
        "patient": Patient | null;
    }
    interface XskribaXbublavyReservationDetail {
        "ambulanceReservationId": string | null;
        "apiBase": string;
        "patientReservationId": string | null;
        "reservationId": string;
    }
    interface XskribaXbublavyReservationsList {
        "ambulance": Ambulance | null;
        "apiBase": string;
        "createdReservation": Reservation | null;
        "patient": Patient | null;
    }
    interface XskribaXbublavyTrash3FillIcon {
    }
}
export interface XskribaXbublavyAmbulanceCreateCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLXskribaXbublavyAmbulanceCreateElement;
}
export interface XskribaXbublavyMainMenuCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLXskribaXbublavyMainMenuElement;
}
export interface XskribaXbublavyPatientCreateCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLXskribaXbublavyPatientCreateElement;
}
export interface XskribaXbublavyReservationCreateCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLXskribaXbublavyReservationCreateElement;
}
export interface XskribaXbublavyReservationDetailCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLXskribaXbublavyReservationDetailElement;
}
export interface XskribaXbublavyReservationsListCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLXskribaXbublavyReservationsListElement;
}
declare global {
    interface HTMLXskribaXbublavyAmbulanceCreateElementEventMap {
        "ambulanceCreated": Ambulance;
        "ambulanceUpdated": Ambulance;
        "ambulanceDeleted": string;
    }
    interface HTMLXskribaXbublavyAmbulanceCreateElement extends Components.XskribaXbublavyAmbulanceCreate, HTMLStencilElement {
        addEventListener<K extends keyof HTMLXskribaXbublavyAmbulanceCreateElementEventMap>(type: K, listener: (this: HTMLXskribaXbublavyAmbulanceCreateElement, ev: XskribaXbublavyAmbulanceCreateCustomEvent<HTMLXskribaXbublavyAmbulanceCreateElementEventMap[K]>) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: Document, ev: DocumentEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
        removeEventListener<K extends keyof HTMLXskribaXbublavyAmbulanceCreateElementEventMap>(type: K, listener: (this: HTMLXskribaXbublavyAmbulanceCreateElement, ev: XskribaXbublavyAmbulanceCreateCustomEvent<HTMLXskribaXbublavyAmbulanceCreateElementEventMap[K]>) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: Document, ev: DocumentEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
    }
    var HTMLXskribaXbublavyAmbulanceCreateElement: {
        prototype: HTMLXskribaXbublavyAmbulanceCreateElement;
        new (): HTMLXskribaXbublavyAmbulanceCreateElement;
    };
    interface HTMLXskribaXbublavyCheck2CircleIconElement extends Components.XskribaXbublavyCheck2CircleIcon, HTMLStencilElement {
    }
    var HTMLXskribaXbublavyCheck2CircleIconElement: {
        prototype: HTMLXskribaXbublavyCheck2CircleIconElement;
        new (): HTMLXskribaXbublavyCheck2CircleIconElement;
    };
    interface HTMLXskribaXbublavyChevronLeftIconElement extends Components.XskribaXbublavyChevronLeftIcon, HTMLStencilElement {
    }
    var HTMLXskribaXbublavyChevronLeftIconElement: {
        prototype: HTMLXskribaXbublavyChevronLeftIconElement;
        new (): HTMLXskribaXbublavyChevronLeftIconElement;
    };
    interface HTMLXskribaXbublavyExclamationOctagonIconElement extends Components.XskribaXbublavyExclamationOctagonIcon, HTMLStencilElement {
    }
    var HTMLXskribaXbublavyExclamationOctagonIconElement: {
        prototype: HTMLXskribaXbublavyExclamationOctagonIconElement;
        new (): HTMLXskribaXbublavyExclamationOctagonIconElement;
    };
    interface HTMLXskribaXbublavyExclamationTriangleIconElement extends Components.XskribaXbublavyExclamationTriangleIcon, HTMLStencilElement {
    }
    var HTMLXskribaXbublavyExclamationTriangleIconElement: {
        prototype: HTMLXskribaXbublavyExclamationTriangleIconElement;
        new (): HTMLXskribaXbublavyExclamationTriangleIconElement;
    };
    interface HTMLXskribaXbublavyHospitalFillIconElement extends Components.XskribaXbublavyHospitalFillIcon, HTMLStencilElement {
    }
    var HTMLXskribaXbublavyHospitalFillIconElement: {
        prototype: HTMLXskribaXbublavyHospitalFillIconElement;
        new (): HTMLXskribaXbublavyHospitalFillIconElement;
    };
    interface HTMLXskribaXbublavyHouseFillIconElement extends Components.XskribaXbublavyHouseFillIcon, HTMLStencilElement {
    }
    var HTMLXskribaXbublavyHouseFillIconElement: {
        prototype: HTMLXskribaXbublavyHouseFillIconElement;
        new (): HTMLXskribaXbublavyHouseFillIconElement;
    };
    interface HTMLXskribaXbublavyInfoCircleIconElement extends Components.XskribaXbublavyInfoCircleIcon, HTMLStencilElement {
    }
    var HTMLXskribaXbublavyInfoCircleIconElement: {
        prototype: HTMLXskribaXbublavyInfoCircleIconElement;
        new (): HTMLXskribaXbublavyInfoCircleIconElement;
    };
    interface HTMLXskribaXbublavyMainMenuElementEventMap {
        "selectAmbulance": Ambulance;
        "selectPatient": Patient;
    }
    interface HTMLXskribaXbublavyMainMenuElement extends Components.XskribaXbublavyMainMenu, HTMLStencilElement {
        addEventListener<K extends keyof HTMLXskribaXbublavyMainMenuElementEventMap>(type: K, listener: (this: HTMLXskribaXbublavyMainMenuElement, ev: XskribaXbublavyMainMenuCustomEvent<HTMLXskribaXbublavyMainMenuElementEventMap[K]>) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: Document, ev: DocumentEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
        removeEventListener<K extends keyof HTMLXskribaXbublavyMainMenuElementEventMap>(type: K, listener: (this: HTMLXskribaXbublavyMainMenuElement, ev: XskribaXbublavyMainMenuCustomEvent<HTMLXskribaXbublavyMainMenuElementEventMap[K]>) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: Document, ev: DocumentEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
    }
    var HTMLXskribaXbublavyMainMenuElement: {
        prototype: HTMLXskribaXbublavyMainMenuElement;
        new (): HTMLXskribaXbublavyMainMenuElement;
    };
    interface HTMLXskribaXbublavyPatientCreateElementEventMap {
        "patientCreated": Patient;
        "patientUpdated": Patient;
        "patientDeleted": string;
    }
    interface HTMLXskribaXbublavyPatientCreateElement extends Components.XskribaXbublavyPatientCreate, HTMLStencilElement {
        addEventListener<K extends keyof HTMLXskribaXbublavyPatientCreateElementEventMap>(type: K, listener: (this: HTMLXskribaXbublavyPatientCreateElement, ev: XskribaXbublavyPatientCreateCustomEvent<HTMLXskribaXbublavyPatientCreateElementEventMap[K]>) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: Document, ev: DocumentEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
        removeEventListener<K extends keyof HTMLXskribaXbublavyPatientCreateElementEventMap>(type: K, listener: (this: HTMLXskribaXbublavyPatientCreateElement, ev: XskribaXbublavyPatientCreateCustomEvent<HTMLXskribaXbublavyPatientCreateElementEventMap[K]>) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: Document, ev: DocumentEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
    }
    var HTMLXskribaXbublavyPatientCreateElement: {
        prototype: HTMLXskribaXbublavyPatientCreateElement;
        new (): HTMLXskribaXbublavyPatientCreateElement;
    };
    interface HTMLXskribaXbublavyPersonPlusFillIconElement extends Components.XskribaXbublavyPersonPlusFillIcon, HTMLStencilElement {
    }
    var HTMLXskribaXbublavyPersonPlusFillIconElement: {
        prototype: HTMLXskribaXbublavyPersonPlusFillIconElement;
        new (): HTMLXskribaXbublavyPersonPlusFillIconElement;
    };
    interface HTMLXskribaXbublavyPersonVcardFillIconElement extends Components.XskribaXbublavyPersonVcardFillIcon, HTMLStencilElement {
    }
    var HTMLXskribaXbublavyPersonVcardFillIconElement: {
        prototype: HTMLXskribaXbublavyPersonVcardFillIconElement;
        new (): HTMLXskribaXbublavyPersonVcardFillIconElement;
    };
    interface HTMLXskribaXbublavyReservationAppElement extends Components.XskribaXbublavyReservationApp, HTMLStencilElement {
    }
    var HTMLXskribaXbublavyReservationAppElement: {
        prototype: HTMLXskribaXbublavyReservationAppElement;
        new (): HTMLXskribaXbublavyReservationAppElement;
    };
    interface HTMLXskribaXbublavyReservationCreateElementEventMap {
        "reservationCreated": Reservation;
    }
    interface HTMLXskribaXbublavyReservationCreateElement extends Components.XskribaXbublavyReservationCreate, HTMLStencilElement {
        addEventListener<K extends keyof HTMLXskribaXbublavyReservationCreateElementEventMap>(type: K, listener: (this: HTMLXskribaXbublavyReservationCreateElement, ev: XskribaXbublavyReservationCreateCustomEvent<HTMLXskribaXbublavyReservationCreateElementEventMap[K]>) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: Document, ev: DocumentEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
        removeEventListener<K extends keyof HTMLXskribaXbublavyReservationCreateElementEventMap>(type: K, listener: (this: HTMLXskribaXbublavyReservationCreateElement, ev: XskribaXbublavyReservationCreateCustomEvent<HTMLXskribaXbublavyReservationCreateElementEventMap[K]>) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: Document, ev: DocumentEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
    }
    var HTMLXskribaXbublavyReservationCreateElement: {
        prototype: HTMLXskribaXbublavyReservationCreateElement;
        new (): HTMLXskribaXbublavyReservationCreateElement;
    };
    interface HTMLXskribaXbublavyReservationDetailElementEventMap {
        "reservationDeleted": void;
        "reservationUpdated": void;
    }
    interface HTMLXskribaXbublavyReservationDetailElement extends Components.XskribaXbublavyReservationDetail, HTMLStencilElement {
        addEventListener<K extends keyof HTMLXskribaXbublavyReservationDetailElementEventMap>(type: K, listener: (this: HTMLXskribaXbublavyReservationDetailElement, ev: XskribaXbublavyReservationDetailCustomEvent<HTMLXskribaXbublavyReservationDetailElementEventMap[K]>) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: Document, ev: DocumentEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
        removeEventListener<K extends keyof HTMLXskribaXbublavyReservationDetailElementEventMap>(type: K, listener: (this: HTMLXskribaXbublavyReservationDetailElement, ev: XskribaXbublavyReservationDetailCustomEvent<HTMLXskribaXbublavyReservationDetailElementEventMap[K]>) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: Document, ev: DocumentEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
    }
    var HTMLXskribaXbublavyReservationDetailElement: {
        prototype: HTMLXskribaXbublavyReservationDetailElement;
        new (): HTMLXskribaXbublavyReservationDetailElement;
    };
    interface HTMLXskribaXbublavyReservationsListElementEventMap {
        "reservationUpdated": void;
        "reservationDeleted": void;
        "reservationCreatedShowed": void;
    }
    interface HTMLXskribaXbublavyReservationsListElement extends Components.XskribaXbublavyReservationsList, HTMLStencilElement {
        addEventListener<K extends keyof HTMLXskribaXbublavyReservationsListElementEventMap>(type: K, listener: (this: HTMLXskribaXbublavyReservationsListElement, ev: XskribaXbublavyReservationsListCustomEvent<HTMLXskribaXbublavyReservationsListElementEventMap[K]>) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: Document, ev: DocumentEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
        removeEventListener<K extends keyof HTMLXskribaXbublavyReservationsListElementEventMap>(type: K, listener: (this: HTMLXskribaXbublavyReservationsListElement, ev: XskribaXbublavyReservationsListCustomEvent<HTMLXskribaXbublavyReservationsListElementEventMap[K]>) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: Document, ev: DocumentEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
    }
    var HTMLXskribaXbublavyReservationsListElement: {
        prototype: HTMLXskribaXbublavyReservationsListElement;
        new (): HTMLXskribaXbublavyReservationsListElement;
    };
    interface HTMLXskribaXbublavyTrash3FillIconElement extends Components.XskribaXbublavyTrash3FillIcon, HTMLStencilElement {
    }
    var HTMLXskribaXbublavyTrash3FillIconElement: {
        prototype: HTMLXskribaXbublavyTrash3FillIconElement;
        new (): HTMLXskribaXbublavyTrash3FillIconElement;
    };
    interface HTMLElementTagNameMap {
        "xskriba-xbublavy-ambulance-create": HTMLXskribaXbublavyAmbulanceCreateElement;
        "xskriba-xbublavy-check2-circle-icon": HTMLXskribaXbublavyCheck2CircleIconElement;
        "xskriba-xbublavy-chevron-left-icon": HTMLXskribaXbublavyChevronLeftIconElement;
        "xskriba-xbublavy-exclamation-octagon-icon": HTMLXskribaXbublavyExclamationOctagonIconElement;
        "xskriba-xbublavy-exclamation-triangle-icon": HTMLXskribaXbublavyExclamationTriangleIconElement;
        "xskriba-xbublavy-hospital-fill-icon": HTMLXskribaXbublavyHospitalFillIconElement;
        "xskriba-xbublavy-house-fill-icon": HTMLXskribaXbublavyHouseFillIconElement;
        "xskriba-xbublavy-info-circle-icon": HTMLXskribaXbublavyInfoCircleIconElement;
        "xskriba-xbublavy-main-menu": HTMLXskribaXbublavyMainMenuElement;
        "xskriba-xbublavy-patient-create": HTMLXskribaXbublavyPatientCreateElement;
        "xskriba-xbublavy-person-plus-fill-icon": HTMLXskribaXbublavyPersonPlusFillIconElement;
        "xskriba-xbublavy-person-vcard-fill-icon": HTMLXskribaXbublavyPersonVcardFillIconElement;
        "xskriba-xbublavy-reservation-app": HTMLXskribaXbublavyReservationAppElement;
        "xskriba-xbublavy-reservation-create": HTMLXskribaXbublavyReservationCreateElement;
        "xskriba-xbublavy-reservation-detail": HTMLXskribaXbublavyReservationDetailElement;
        "xskriba-xbublavy-reservations-list": HTMLXskribaXbublavyReservationsListElement;
        "xskriba-xbublavy-trash3-fill-icon": HTMLXskribaXbublavyTrash3FillIconElement;
    }
}
declare namespace LocalJSX {
    interface XskribaXbublavyAmbulanceCreate {
        "apiBase"?: string;
        "onAmbulanceCreated"?: (event: XskribaXbublavyAmbulanceCreateCustomEvent<Ambulance>) => void;
        "onAmbulanceDeleted"?: (event: XskribaXbublavyAmbulanceCreateCustomEvent<string>) => void;
        "onAmbulanceUpdated"?: (event: XskribaXbublavyAmbulanceCreateCustomEvent<Ambulance>) => void;
        "userId"?: string;
    }
    interface XskribaXbublavyCheck2CircleIcon {
    }
    interface XskribaXbublavyChevronLeftIcon {
    }
    interface XskribaXbublavyExclamationOctagonIcon {
    }
    interface XskribaXbublavyExclamationTriangleIcon {
    }
    interface XskribaXbublavyHospitalFillIcon {
    }
    interface XskribaXbublavyHouseFillIcon {
    }
    interface XskribaXbublavyInfoCircleIcon {
    }
    interface XskribaXbublavyMainMenu {
        "ambulances"?: Ambulance[];
        "onSelectAmbulance"?: (event: XskribaXbublavyMainMenuCustomEvent<Ambulance>) => void;
        "onSelectPatient"?: (event: XskribaXbublavyMainMenuCustomEvent<Patient>) => void;
        "patients"?: Patient[];
    }
    interface XskribaXbublavyPatientCreate {
        "apiBase"?: string;
        "onPatientCreated"?: (event: XskribaXbublavyPatientCreateCustomEvent<Patient>) => void;
        "onPatientDeleted"?: (event: XskribaXbublavyPatientCreateCustomEvent<string>) => void;
        "onPatientUpdated"?: (event: XskribaXbublavyPatientCreateCustomEvent<Patient>) => void;
        "userId"?: string;
    }
    interface XskribaXbublavyPersonPlusFillIcon {
    }
    interface XskribaXbublavyPersonVcardFillIcon {
    }
    interface XskribaXbublavyReservationApp {
        "apiBase"?: string;
        "baseUrl"?: string;
    }
    interface XskribaXbublavyReservationCreate {
        "apiBase"?: string;
        "onReservationCreated"?: (event: XskribaXbublavyReservationCreateCustomEvent<Reservation>) => void;
        "patient"?: Patient | null;
    }
    interface XskribaXbublavyReservationDetail {
        "ambulanceReservationId"?: string | null;
        "apiBase"?: string;
        "onReservationDeleted"?: (event: XskribaXbublavyReservationDetailCustomEvent<void>) => void;
        "onReservationUpdated"?: (event: XskribaXbublavyReservationDetailCustomEvent<void>) => void;
        "patientReservationId"?: string | null;
        "reservationId"?: string;
    }
    interface XskribaXbublavyReservationsList {
        "ambulance"?: Ambulance | null;
        "apiBase"?: string;
        "createdReservation"?: Reservation | null;
        "onReservationCreatedShowed"?: (event: XskribaXbublavyReservationsListCustomEvent<void>) => void;
        "onReservationDeleted"?: (event: XskribaXbublavyReservationsListCustomEvent<void>) => void;
        "onReservationUpdated"?: (event: XskribaXbublavyReservationsListCustomEvent<void>) => void;
        "patient"?: Patient | null;
    }
    interface XskribaXbublavyTrash3FillIcon {
    }
    interface IntrinsicElements {
        "xskriba-xbublavy-ambulance-create": XskribaXbublavyAmbulanceCreate;
        "xskriba-xbublavy-check2-circle-icon": XskribaXbublavyCheck2CircleIcon;
        "xskriba-xbublavy-chevron-left-icon": XskribaXbublavyChevronLeftIcon;
        "xskriba-xbublavy-exclamation-octagon-icon": XskribaXbublavyExclamationOctagonIcon;
        "xskriba-xbublavy-exclamation-triangle-icon": XskribaXbublavyExclamationTriangleIcon;
        "xskriba-xbublavy-hospital-fill-icon": XskribaXbublavyHospitalFillIcon;
        "xskriba-xbublavy-house-fill-icon": XskribaXbublavyHouseFillIcon;
        "xskriba-xbublavy-info-circle-icon": XskribaXbublavyInfoCircleIcon;
        "xskriba-xbublavy-main-menu": XskribaXbublavyMainMenu;
        "xskriba-xbublavy-patient-create": XskribaXbublavyPatientCreate;
        "xskriba-xbublavy-person-plus-fill-icon": XskribaXbublavyPersonPlusFillIcon;
        "xskriba-xbublavy-person-vcard-fill-icon": XskribaXbublavyPersonVcardFillIcon;
        "xskriba-xbublavy-reservation-app": XskribaXbublavyReservationApp;
        "xskriba-xbublavy-reservation-create": XskribaXbublavyReservationCreate;
        "xskriba-xbublavy-reservation-detail": XskribaXbublavyReservationDetail;
        "xskriba-xbublavy-reservations-list": XskribaXbublavyReservationsList;
        "xskriba-xbublavy-trash3-fill-icon": XskribaXbublavyTrash3FillIcon;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "xskriba-xbublavy-ambulance-create": LocalJSX.XskribaXbublavyAmbulanceCreate & JSXBase.HTMLAttributes<HTMLXskribaXbublavyAmbulanceCreateElement>;
            "xskriba-xbublavy-check2-circle-icon": LocalJSX.XskribaXbublavyCheck2CircleIcon & JSXBase.HTMLAttributes<HTMLXskribaXbublavyCheck2CircleIconElement>;
            "xskriba-xbublavy-chevron-left-icon": LocalJSX.XskribaXbublavyChevronLeftIcon & JSXBase.HTMLAttributes<HTMLXskribaXbublavyChevronLeftIconElement>;
            "xskriba-xbublavy-exclamation-octagon-icon": LocalJSX.XskribaXbublavyExclamationOctagonIcon & JSXBase.HTMLAttributes<HTMLXskribaXbublavyExclamationOctagonIconElement>;
            "xskriba-xbublavy-exclamation-triangle-icon": LocalJSX.XskribaXbublavyExclamationTriangleIcon & JSXBase.HTMLAttributes<HTMLXskribaXbublavyExclamationTriangleIconElement>;
            "xskriba-xbublavy-hospital-fill-icon": LocalJSX.XskribaXbublavyHospitalFillIcon & JSXBase.HTMLAttributes<HTMLXskribaXbublavyHospitalFillIconElement>;
            "xskriba-xbublavy-house-fill-icon": LocalJSX.XskribaXbublavyHouseFillIcon & JSXBase.HTMLAttributes<HTMLXskribaXbublavyHouseFillIconElement>;
            "xskriba-xbublavy-info-circle-icon": LocalJSX.XskribaXbublavyInfoCircleIcon & JSXBase.HTMLAttributes<HTMLXskribaXbublavyInfoCircleIconElement>;
            "xskriba-xbublavy-main-menu": LocalJSX.XskribaXbublavyMainMenu & JSXBase.HTMLAttributes<HTMLXskribaXbublavyMainMenuElement>;
            "xskriba-xbublavy-patient-create": LocalJSX.XskribaXbublavyPatientCreate & JSXBase.HTMLAttributes<HTMLXskribaXbublavyPatientCreateElement>;
            "xskriba-xbublavy-person-plus-fill-icon": LocalJSX.XskribaXbublavyPersonPlusFillIcon & JSXBase.HTMLAttributes<HTMLXskribaXbublavyPersonPlusFillIconElement>;
            "xskriba-xbublavy-person-vcard-fill-icon": LocalJSX.XskribaXbublavyPersonVcardFillIcon & JSXBase.HTMLAttributes<HTMLXskribaXbublavyPersonVcardFillIconElement>;
            "xskriba-xbublavy-reservation-app": LocalJSX.XskribaXbublavyReservationApp & JSXBase.HTMLAttributes<HTMLXskribaXbublavyReservationAppElement>;
            "xskriba-xbublavy-reservation-create": LocalJSX.XskribaXbublavyReservationCreate & JSXBase.HTMLAttributes<HTMLXskribaXbublavyReservationCreateElement>;
            "xskriba-xbublavy-reservation-detail": LocalJSX.XskribaXbublavyReservationDetail & JSXBase.HTMLAttributes<HTMLXskribaXbublavyReservationDetailElement>;
            "xskriba-xbublavy-reservations-list": LocalJSX.XskribaXbublavyReservationsList & JSXBase.HTMLAttributes<HTMLXskribaXbublavyReservationsListElement>;
            "xskriba-xbublavy-trash3-fill-icon": LocalJSX.XskribaXbublavyTrash3FillIcon & JSXBase.HTMLAttributes<HTMLXskribaXbublavyTrash3FillIconElement>;
        }
    }
}
